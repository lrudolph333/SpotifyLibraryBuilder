Metadata-Version: 2.4
Name: spotify-library-builder
Version: 0.1.0
Summary: CLI tool that builds a local MP3 library from a Spotify playlist by fetching YouTube videos and converting them to MP3.
Author-email: Your Name <you@example.com>
License: MIT
Project-URL: Source, https://github.com/yourname/SpotifyLibraryBuilder
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: requests>=2.31.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: tqdm>=4.66.0
Requires-Dist: yt-dlp>=2025.6.30

# SpotifyLibraryBuilder

A tool to download a spotify playlist to local harddrive via youtube to mp3 api.

## Installation

Using `pip` and a virtual environment is recommended::

```bash
python -m venv .venv
source .venv/bin/activate
pip install -e .  # install in editable / development mode
```

This will install the console script `sp-lib-builder`.

## Configuration

1. Copy `env.template` to `.env` in the project root.
2. Fill in your credentials:
   - **Spotify**: `SPOTIFY_CLIENT_ID` and `SPOTIFY_CLIENT_SECRET`
   - **Google**: `YOUTUBE_API_KEY`
   - **Conversion service**: `YT2MP3_API_KEY`

The application loads the `.env` file automatically at runtime.

## Usage

```bash
# Download every track from the playlist into ~/Downloads
sp-lib-builder <spotify-playlist-id>

# Choose a custom output directory
sp-lib-builder <playlist-id> --output /path/to/mp3s
```

The script will:

1. Fetch the track titles and artist names from the given Spotify playlist.
2. Search YouTube for the first matching video for each song.
3. Request an MP3 conversion from the public YouTube→MP3 API.
4. Poll the conversion status and download the finished file into your chosen directory.

Progress is displayed via a live progress-bar and detailed logs.

## Project layout

```
src/spotify_library_builder/
    cli.py            # Command-line interface
    config.py         # Environment variable handling
    converter.py      # YouTube→MP3 integration
    spotify_client.py # Spotify API wrapper
    youtube_client.py # YouTube search wrapper
    utils.py          # Generic utilities
```

## Packaging for PyPI

The project is configured with `pyproject.toml` using _setuptools_. To build a wheel and sdist:

```bash
python -m build
```

---

### Disclaimer

This project interacts with third-party services that may impose rate-limits or change
without notice. Use responsibly and abide by the terms of service of Spotify,
YouTube and the conversion API.
